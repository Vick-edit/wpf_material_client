<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:WPF_client.Converters"
                    xmlns:elements="clr-namespace:WPF_client.Elements">

    <converters:LeftMenuOffsetConverter x:Key="LeftMenuOffsetConverter" />
    <converters:LeftMenuZoomConverter x:Key="LeftMenuZoomConverter" />
    <converters:LeftMenuHalfContentOffsetConverter x:Key="LeftMenuHalfContentOffsetConverter" />


    <Style TargetType="{x:Type elements:LeftMenuContentWrapper}">
        <Style.Triggers>
            <Trigger Property="IsSlideMenu" Value="False">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type elements:LeftMenuContentWrapper}">
                            <Border BorderThickness="0" BorderBrush="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="LeftDrawer">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="LeftDrawerClosed" To="LeftDrawerOpen">
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" Duration="0:0:0.4">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <SineEase EasingMode="EaseOut" />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentPresenterScale" Duration="0:0:0.4">
                                                        <DoubleAnimation.EasingFunction>
                                                            <SineEase EasingMode="EaseOut" />
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="LeftDrawerOpen" To="LeftDrawerClosed">
                                                <Storyboard>
                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock">
                                                        <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                            <EasingThicknessKeyFrame.EasingFunction>
                                                                <SineEase EasingMode="EaseOut" />
                                                            </EasingThicknessKeyFrame.EasingFunction>
                                                        </EasingThicknessKeyFrame>
                                                    </ThicknessAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentPresenterScale">
                                                        <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.4">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <SineEase EasingMode="EaseOut" />
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="LeftDrawerOpen">
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" Duration="0"/>
                                                <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentPresenterScale" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LeftDrawerClosed">
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" To="0" Duration="0"/>
                                                <DoubleAnimation Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="ContentPresenterScale" To="1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <DockPanel x:Name="RootDock"
                                   Margin="{Binding LeftMenuSize, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftMenuOffsetConverter}}">
                                    <AdornerDecorator DockPanel.Dock="Top">
                                        <ContentPresenter
                                        x:Name="PART_TopElement"
                                        Content="{TemplateBinding TopElementContent}" 
                                        ContentTemplate="{TemplateBinding TopElementContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding TopElementContentStringFormat}"  />
                                    </AdornerDecorator>
                                    <AdornerDecorator>
                                        <ContentPresenter
                                        x:Name="ContentPresenter" 
                                        Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}">
                                            <ContentPresenter.LayoutTransform>
                                                <ScaleTransform x:Name="ContentPresenterScale">
                                                    <ScaleTransform.ScaleX>
                                                        <MultiBinding Converter="{StaticResource LeftMenuZoomConverter}">
                                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="LeftMenuSize"/>
                                                            <Binding ElementName="RootDock" Path="ActualWidth" />
                                                        </MultiBinding>
                                                    </ScaleTransform.ScaleX>
                                                    <ScaleTransform.ScaleY>
                                                        <Binding ElementName="ContentPresenterScale" Path="ScaleX"/>
                                                    </ScaleTransform.ScaleY>
                                                </ScaleTransform>
                                            </ContentPresenter.LayoutTransform>
                                        </ContentPresenter>
                                    </AdornerDecorator>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsSlideMenu" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type elements:LeftMenuContentWrapper}">
                            <Border BorderThickness="0" BorderBrush="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="LeftDrawer">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition From="LeftDrawerClosed" To="LeftDrawerOpen">
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" Duration="0:0:0.4">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <SineEase EasingMode="EaseOut" />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </VisualTransition>
                                            <VisualTransition From="LeftDrawerOpen" To="LeftDrawerClosed">
                                                <Storyboard>
                                                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock">
                                                        <EasingThicknessKeyFrame Value="0" KeyTime="0:0:0.4">
                                                            <EasingThicknessKeyFrame.EasingFunction>
                                                                <SineEase EasingMode="EaseOut" />
                                                            </EasingThicknessKeyFrame.EasingFunction>
                                                        </EasingThicknessKeyFrame>
                                                    </ThicknessAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="LeftDrawerOpen">
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="LeftDrawerClosed">
                                            <Storyboard>
                                                <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="RootDock" To="0" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <DockPanel x:Name="RootDock"
                                   Margin="{TemplateBinding LeftMenuSize, Converter={StaticResource LeftMenuHalfContentOffsetConverter}}">
                                    <AdornerDecorator DockPanel.Dock="Top">
                                        <ContentPresenter
                                        x:Name="PART_TopElement"
                                        Content="{TemplateBinding TopElementContent}" 
                                        ContentTemplate="{TemplateBinding TopElementContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding TopElementContentStringFormat}"  />
                                    </AdornerDecorator>
                                    <AdornerDecorator>
                                        <ContentPresenter
                                        x:Name="ContentPresenter" 
                                        Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"/>
                                    </AdornerDecorator>
                                </DockPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>